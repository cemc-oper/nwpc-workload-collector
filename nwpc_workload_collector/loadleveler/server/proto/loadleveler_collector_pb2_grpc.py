# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import loadleveler_collector_pb2 as loadleveler__collector__pb2


class LoadLevelerCollectorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CollectJobs = channel.unary_unary(
        '/loadleveler_collector.LoadLevelerCollector/CollectJobs',
        request_serializer=loadleveler__collector__pb2.JobsRequest.SerializeToString,
        response_deserializer=loadleveler__collector__pb2.Response.FromString,
        )
    self.CollectQueues = channel.unary_unary(
        '/loadleveler_collector.LoadLevelerCollector/CollectQueues',
        request_serializer=loadleveler__collector__pb2.QueuesRequest.SerializeToString,
        response_deserializer=loadleveler__collector__pb2.Response.FromString,
        )


class LoadLevelerCollectorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CollectJobs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CollectQueues(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LoadLevelerCollectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CollectJobs': grpc.unary_unary_rpc_method_handler(
          servicer.CollectJobs,
          request_deserializer=loadleveler__collector__pb2.JobsRequest.FromString,
          response_serializer=loadleveler__collector__pb2.Response.SerializeToString,
      ),
      'CollectQueues': grpc.unary_unary_rpc_method_handler(
          servicer.CollectQueues,
          request_deserializer=loadleveler__collector__pb2.QueuesRequest.FromString,
          response_serializer=loadleveler__collector__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'loadleveler_collector.LoadLevelerCollector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
